kind: Deployment
apiVersion: apps/v1
metadata:
  name: app1
  # these labels are deployment related labels
  labels:
    app: app1
    purpose: ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1
      purpose: ingress
  # pod definition
  template:
    metadata: 
      labels:
        app: app1
        purpose: ingress
    spec:
      containers:
      - name: app1
        image: saipavan9594/app1:1.0

---
apiVersion: v1
kind: Service
metadata:
  name: app1
spec:                               ##usually here we give Type: LoadBalancer -- if we give here then it will create Classic Load Balancer. if we have multiple apps then for each app it will create Classic load balancer and also increase the cost. so we are running clusterIP - by default.
  selector:
    app: app1
    purpose: ingress
  ports:
  - protocol: TCP
    port: 80 #service-port
    targetPort: 80 #target-port
          
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app1
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/tags: Environment=dev,Team=test
    #alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:533267158693:certificate/6f1de1e8-8353-4445-9188-168a3f15b605
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:533267158693:certificate/96a37903-801d-41dc-854d-89efbf1be7a3
    alb.ingress.kubernetes.io/listen-ports: '[ {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/group.name: expense  #this annotation used to keep only ALB under joindevops group.
    # kubernetes cluster will create internet-facing, ip based load balancer with some tags and group.
spec:
  ingressClassName: alb
  rules:
  - host: "app1.pspkdevops.online" # like ALB Rule
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: app1 # like ALB Target group
            port:
              number: 80
